# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- main

pool:
  vmImage: windows-latest

  - task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

parameters:
- name: teamsWebhookUrl
  displayName: Microsoft Teams Group Webhook Url
  type: string
  default: https://sgapucminasbr.webhook.office.com/webhookb2/ba724b13-b93d-40be-ab26-4f5da514929a@14cbd5a7-ec94-46ba-b314-cc0fc972a161/IncomingWebhook/302c8dc009b340c881655c00c24f1af9/731643ab-a40b-4d6a-8652-86b66630967f
- name: moduleName
  displayName: Module Name
  type: string
  default: YourDefaultValueHere
- name: transactions
  displayName: Transactions
  type: string
  default: YourTransactionsValueHere

stages:
  - stage: NpmInstall
    jobs:
      - job: NpmInstallJob
        # pool: 'windows-latest'
        steps:
          - script: |
              echo "updating packages"
              yum update -y

              echo "Installing NodeJS 18"
              yum install -y gcc-c++ make 
              # curl -sL https://rpm.nodesource.com/setup_18.x | bash -
              # yum install -y nodejs 

              yum install https://rpm.nodesource.com/pub_18.x/nodistro/repo/nodesource-release-nodistro-1.noarch.rpm -y
              yum install nodejs -y --setopt=nodesource-nodejs.module_hotfixes=1
              
              echo "installing cypress dependencies"
              yum install -y xorg-x11-server-Xvfb gtk2-devel gtk3-devel libnotify-devel GConf2 nss libXScrnSaver alsa-lib
              
              echo "installing google chrome browser"
              yum install -y wget
              wget https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm
              yum install -y ./google-chrome-stable_current_*.rpm

              rm /tmp/.X99-lock        

              pkill Xvfb

              export DISPLAY=:99
              Xvfb -screen 0 1024x768x24 :99 &
              export ELECTRON_RUN_AS_NODE=1
              export TERM=dumb

              npm i
              export NODE_ENV=dev
              export NODE_INSTANCE=plat
              npm run test
              
              cd TeamsMessenger
              npm i
              export TEAMS_WEBHOOK_URL=$teamsWebhookUrl
              export BUILD_ID=$(Build.BuildId)
              export MODULE_NAME=$moduleName
              export AUTOMATION_TITLE=$transactions
              npm run dev

            continueOnError: true

          # - script: |
          #     mkdir -p reports/html_simple
          #     node cypress/support/report-screenshot-attach.js
          #     node cypress/support/cucumber-html-reporter.js

          # - task: PublishCucumberReport@1
          #   inputs:
          #     jsonDir: "$(System.DefaultWorkingDirectory)/reports/html_simple"
          #     outputPath: "$(System.DefaultWorkingDirectory)/reports/html_simple"
          #     name: "Automated E2E Tests"
          #     title: "Automated E2E Tests"
          # steps:

          - script: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
              rfbrowser init
            displayName: 'Install dependencies'

          - script: |
              robot -d ./logs -x output-xunit.xml tests
            continueOnError: true
            displayName: 'Run UI Tests'

          - task: PublishTestResults@2
            inputs:
              testResultsFormat: 'JUnit'
              testResultsFiles: 'logs/output-xunit.xml'
            displayName: 'Publish Test Results'
